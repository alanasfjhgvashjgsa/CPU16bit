--==============================================================================
--==                                                                          ==
--== Project   : CPU_16bit                                                    ==
--== Component : dff_VHDL																		==
--== Notes		: "As in eddiewastaken's logisim CPU, the dff here behaves		==
--==              as a 'Dual D-Type Positive-Edge-Triggered Flip-Flops			==
--==              With Preset And Clear', see truth table in eddiewastaken's" ==
--==              CPU design document for reference."                         ==   
--==                                                                          ==
--==============================================================================

LIBRARY ieee;
USE ieee.std_logic_1164.all;

LIBRARY work;

ENTITY Buffer_4bit_VHDL IS
	PORT
		(
				E			:	IN  STD_LOGIC;
				A 		 	:  IN  STD_LOGIC_VECTOR(3 DOWNTO 0);
				S 			:  OUT  STD_LOGIC_VECTOR(3 DOWNTO 0)
		);
END Buffer_4bit_VHDL;


ARCHITECTURE bhv_buffer4 OF Buffer_4bit_VHDL IS 

   -----------------------------------------------------------------------------
   -- Here all used components are defined                                    --
   -----------------------------------------------------------------------------
		-- n/a components
	
--------------------------------------------------------------------------------
-- All used signals are defined here                                          --
--------------------------------------------------------------------------------
	-- n/a signals

	BEGIN

   --------------------------------------------------------------------------------
   -- Here all input connections are defined                                     --
   --------------------------------------------------------------------------------
		-- n/a
	
   --------------------------------------------------------------------------------
   -- Here all output connections are defined                                    --
   --------------------------------------------------------------------------------
		-- n/a
	
   --------------------------------------------------------------------------------
   -- Here all normal components are defined                                     --
   --------------------------------------------------------------------------------

	PROCESS(A(0),E)
		BEGIN
			if (E = '1') THEN
				S(0) <= A(0);
			ELSE
				S(0) <= 'Z';					-- 'Z' is high impedance signal 
			END IF;								-- (to force no output from input)
	END PROCESS;


	PROCESS(A(1),E)
		BEGIN
			if (E = '1') THEN
				S(1) <= A(1);
			ELSE
				S(1) <= 'Z';
			END IF;
	END PROCESS;

	PROCESS(A(2),E)
		BEGIN
			if (E = '1') THEN
				S(2) <= A(2);
			ELSE
				S(2) <= 'Z';
			END IF;
	END PROCESS;

	PROCESS(A(3),E)
		BEGIN
			if (E = '1') THEN
				S(3) <= A(3);
			ELSE
				S(3) <= 'Z';
			END IF;
	END PROCESS;


END bhv_buffer4;
